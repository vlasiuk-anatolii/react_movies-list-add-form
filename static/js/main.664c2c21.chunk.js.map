{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","newtitle","newdescription","newimgUrl","newimdbUrl","newimdbId","isnewtitle","isnewdescription","isnewimgUrl","isnewimdbUrl","isnewimdbId","isbutton","re","isButton","setState","handleSubmitForm","event","preventDefault","test","newFilm","props","addNewFilm","onChange","this","onSubmit","type","placeholder","value","target","name","required","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.664c2c21.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\n\ntype Props = {\n  addNewFilm: (movie: Movie) => void;\n};\n\ntype State = {\n  newtitle: string,\n  newdescription: string,\n  newimgUrl: string,\n  newimdbUrl: string,\n  newimdbId: string,\n  isnewtitle: boolean,\n  isnewdescription: boolean,\n  isnewimgUrl: boolean,\n  isnewimdbUrl: boolean,\n  isnewimdbId: boolean,\n  isbutton: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    newtitle: '',\n    newdescription: '',\n    newimgUrl: '',\n    newimdbUrl: '',\n    newimdbId: '',\n    isnewtitle: false,\n    isnewdescription: false,\n    isnewimgUrl: false,\n    isnewimdbUrl: false,\n    isnewimdbId: false,\n    isbutton: true,\n  };\n\n  // eslint-disable-next-line max-len\n  re = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  isButton = () => {\n    if (this.state.newtitle\n    && this.state.newdescription\n    && this.state.newimdbId\n    && this.state.newimdbUrl\n    && this.state.newimgUrl\n    ) {\n      this.setState({ isbutton: false });\n    }\n  };\n\n  handleSubmitForm = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n\n    if (!this.state.newtitle) {\n      this.setState({ isnewtitle: true });\n    }\n\n    if (!this.state.newdescription) {\n      this.setState({ isnewdescription: true });\n    }\n\n    if (!this.re.test(this.state.newimdbUrl)) {\n      this.setState({ isnewimdbUrl: true });\n\n      return;\n    }\n\n    if (this.re.test(this.state.newimdbUrl)) {\n      this.setState({ isnewimdbUrl: false });\n    }\n\n    if (!this.re.test(this.state.newimgUrl)) {\n      this.setState({ isnewimgUrl: true });\n\n      return;\n    }\n\n    if (this.re.test(this.state.newimgUrl)) {\n      this.setState({ isnewimgUrl: false });\n    }\n\n    if (!this.state.newimdbId) {\n      this.setState({ isnewimdbId: true });\n    }\n\n    if (this.state.newtitle\n      && this.state.newdescription\n      && this.state.newimdbId\n      && this.state.newimdbUrl\n      && this.state.newimgUrl\n    ) {\n      const newFilm: Movie = {\n        title: this.state.newtitle,\n        description: this.state.newdescription,\n        imgUrl: this.state.newimgUrl,\n        imdbUrl: this.state.newimdbUrl,\n        imdbId: this.state.newimdbId,\n      };\n\n      this.props.addNewFilm(newFilm);\n    }\n\n    this.setState({ newtitle: '' });\n    this.setState({ newdescription: '' });\n    this.setState({ newimdbId: '' });\n    this.setState({ newimdbUrl: '' });\n    this.setState({ newimgUrl: '' });\n    this.setState({ isbutton: true });\n  };\n\n  // isCorrectUrlIMGHandler = (\n  //   event: { target: { value: string, name: string }; },\n  // ) => {\n  //   const { value, name } = event.target;\n\n  //   if (name === 'newimgUrl') {\n  //     this.setState(() => {\n  //       // eslint-disable-next-line no-console\n  //       console.log((this.re).test(value));\n\n  //       if ((this.re).test(value)) {\n  //         this.setState({ newimgUrl: value });\n  //       } else {\n  //         this.setState({ isnewimgUrl: true });\n  //       }\n  //     });\n  //     this.setState({ isnewimgUrl: false });\n  //   }\n\n  //   if (name === 'newimdbUrl') {\n  //     this.setState(() => {\n  //       if ((this.re).test(value)) {\n  //         this.setState({ newimdbUrl: value });\n  //       } else {\n  //         this.setState({ isnewimdbUrl: true });\n  //       }\n  //     });\n  //     this.setState({ isnewimdbUrl: false });\n  //   }\n  // };\n\n  render() {\n    return (\n      <div className=\"\">\n        <form\n          onChange={this.isButton}\n          onSubmit={this.handleSubmitForm}\n        >\n          <div className=\"notification\">Put the data below</div>\n          <div className=\"\">\n            <input\n              className=\"control mb-3\"\n              type=\"text\"\n              placeholder=\"title\"\n              value={this.state.newtitle}\n              onChange={(event) => {\n                this.setState({ newtitle: event.target.value });\n                this.setState({ isnewtitle: false });\n              }}\n            />\n            {this.state.isnewtitle && (\n              <div className=\"notification is-danger\">Title is empty</div>\n            )}\n          </div>\n          <div className=\"\">\n            <input\n              className=\"control mb-3\"\n              type=\"text\"\n              placeholder=\"description\"\n              value={this.state.newdescription}\n              onChange={(event) => {\n                this.setState({ newdescription: event.target.value });\n                this.setState({ isnewdescription: false });\n              }}\n            />\n            {this.state.isnewdescription && (\n              <div className=\"notification is-danger\">Description is empty</div>\n            )}\n          </div>\n          <div className=\"\">\n            <input\n              name=\"newimgUrl\"\n              className=\"control mb-3\"\n              type=\"text\"\n              placeholder=\"imgUrl\"\n              value={this.state.newimgUrl}\n              onChange={(event) => {\n                this.setState({ newimgUrl: event.target.value });\n              }}\n            />\n            {this.state.isnewimgUrl && (\n              <div className=\"\n              notification is-danger mb-3\"\n              >\n                Paste correct URL\n\n              </div>\n            )}\n          </div>\n          <div className=\"\">\n            <input\n              name=\"newimdbUrl\"\n              className=\"control mb-3\"\n              type=\"text\"\n              placeholder=\"imdbUrl\"\n              value={this.state.newimdbUrl}\n              onChange={(event) => {\n                this.setState({ newimdbUrl: event.target.value });\n              }}\n            />\n            {this.state.isnewimdbUrl && (\n              <div className=\"\n              notification is-danger mb-3\"\n              >\n                Paste correct URL\n\n              </div>\n            )}\n          </div>\n          <div className=\"\">\n            <input\n              className=\"control mb-3\"\n              type=\"text\"\n              placeholder=\"imdbId\"\n              required\n              value={this.state.newimdbId}\n              onChange={(event) => {\n                this.setState({ newimdbId: event.target.value });\n                this.setState({ isnewimdbId: false });\n              }}\n            />\n            {this.state.isnewimdbId && (\n              <div className=\"notification is-danger\">New imdbId is empty</div>\n            )}\n          </div>\n          <button\n            className=\"button is-primary mt-3\"\n            type=\"submit\"\n            disabled={this.state.isbutton}\n          >\n            Add\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie): void => {\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addNewFilm={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}